{
	"Instrucciones": [
		{
			"CBW": {
				"descripcion": "Ajuste BCD después de la multiplicación. Convierte el resultado de la multiplicación de dos números decimales en el formato BCD."
			}
		},
		{
			"CLC": {
				"descripcion": "Ajuste BCD después de la resta. Ajusta el contenido de AL después de una resta de números BCD."
			}
		},
		{
			"LODSB": {
				"descripcion": "Retorno de interrupción. Restaura el puntero de instrucción y los registros de segmento después de una interrupción."
			}
		},
		{
			"LODSW": {
				"descripcion": "Carga los registros de estado en AH. Transfiere el estado de los flags a AH."
			}
		},
		{
			"STOSB": {
				"descripcion": "Establece el flag de dirección, utilizado para operaciones con cadenas hacia atrás."
			}
		},
		{
			"STOSW": {
				"descripcion": "Establece el flag de interrupción, permitiendo que ocurran interrupciones de hardware."
			}
		},
		{
			"DIV": {
				"descripcion": "Genera una interrupción de software en un vector de interrupción específico."
			}
		},
		{
			"IMUL": {
				"descripcion": "Opera un NOT bit a bit, invirtiendo todos los bits del operando."
			}
		},
		{
			"INC": {
				"descripcion": "Divide el operando (división entera con signo) almacenado en el registro por el divisor especificado."
			}
		},
		{
			"NEG": {
				"descripcion": "Multiplica dos operandos sin signo y almacena el resultado en un registro de destino."
			}
		},
		{
			"ADD": {
				"descripcion": "Restaura la condición del carry en el procesador."
			}
		},
		{
			"LDS": {
				"descripcion": "Rota a la izquierda con carry. Rota los bits del operando hacia la izquierda usando el carry."
			}
		},
		{
			"MOV": {
				"descripcion": "Desplazamiento a la izquierda lógico, moviendo bits a la izquierda y llenando con ceros."
			}
		},
		{
			"ROR": {
				"descripcion": "Intercambia los valores de dos registros o un registro y una dirección de memoria."
			}
		},
		{
			"JNS": {
				"descripcion": "Copia datos de un lugar a otro, como entre registros o de memoria a registro."
			}
		},
		{
			"JS": {
				"descripcion": "Salta si no es arriba o igual. Brinca si el resultado de una comparación es menor."
			}
		},
		{
			"LOOPNE": {
				"descripcion": "Salta si no hay carry. Se usa para control de flujo cuando no hay carry."
			}
		},
		{
			"JG": {
				"descripcion": "Salta si no es menor. Brinca si el resultado es mayor o igual en comparación."
			}
		},
		{
			"JMP": {
				"descripcion": "Salta si hay desbordamiento. Se usa para manejar desbordamientos en cálculos."
			}
		},
		{
			"JNBE": {
				"descripcion": "Repite un bloque de instrucciones mientras CX es mayor que 0, decreciendo CX en cada iteración."
			}
		}
	],
	"pseudoinstrucciones": [
		".stack segment",
		".data segment",
		".code segment",
		".model small",
		".8086",
		".stack 100h",
		".data",
		".code",
		"end",
		"ends",
		"endp",
		".model tiny",
		".model large",
		".model medium",
		".model compact",
		".db",
		".dw",
		".dd",
		".equ",
		".org",
		".align",
		".byte",
		".word",
		".resb",
		".resw",
		".macro",
		".endm",
		".repeat",
		".times",
		".local",
		".label",
		".define",
		".extern",
		".public",
		".proc",
		".endproc",
		".seg",
		".comment"
	],
	"regexSimbol": [
		"^[a-zA-Z_][a-zA-Z0-9_]*:$",
		"^[a-zA-Z_][a-zA-Z0-9_]*$",
		"^[0-9]+$",
		"^[0-9]+[a-zA-Z]*$",
		"^[,()]$",
		"[?\"!\"#$%&'()*+,-./:;<=>@[\\^_`{|}~]"
	]
}
